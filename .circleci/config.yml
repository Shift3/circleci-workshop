version: 2.1
jobs:
  build:
    working_directory: ~/repo/sample-app
    docker:
      - image: cimg/node:14.10.1 # the primary container, where your job's commands are run
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout: # check out the code in the project directory
          path: ~/repo/
      # look for existing cache and restore if found
      - restore_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
      # install dependencies    
      - run:
          name: install dependencies
          command: npm install
      # save any changes to the cache
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths: 
            - node_modules
      - run:
          name: Build Application
          command: |-
            npm run build
  test:
    working_directory: ~/repo/sample-app
    docker:
      - image: cimg/node:14.10.1 # the primary container, where your job's commands are run
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout: # check out the code in the project directory
          path: ~/repo/
      # look for existing cache and restore if found
      - restore_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
      # install dependencies    
      - run:
          name: install dependencies
          command: npm install
      # save any changes to the cache
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths: 
            - node_modules
      - run:
          name: Test Application
          command: |-
            npm run test
  deploy:
    docker: # Specify executor for running deploy job
        - image: <docker-image-name-tag> # Specify docker image to use
          auth:
            username: mydockerhub-user
            password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
        - run: # Install the AWS CLI if it is not already included in the docker image
            name: Install awscli
            command: sudo pip install awscli
        - run: # Deploy to S3 using the sync command
            name: Deploy to S3
            command: aws s3 sync <path/to/bucket> <s3://location/in/S3-to-deploy-to>

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - test:
          requires:
            - build
  build-test-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - test:
          requires:
            - build
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - main


      